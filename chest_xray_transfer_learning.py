# -*- coding: utf-8 -*-
"""chest_xray_transfer_learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AGsfEbsYr3aNnrTDs0JPayGGiuGmEFjM
"""

import tensorflow as tf
from tensorflow.keras.layers import Dense,Flatten,Input,Lambda
from keras.models import Model
from keras.applications.vgg16 import VGG16
from keras.applications.vgg16 import preprocess_input
from glob import glob
from keras.preprocessing import image
from keras.preprocessing.image import ImageDataGenerator



image_size = [224,224]

train_path = '/content/drive/MyDrive/Colab Notebooks/ANN/chest_xray/train'
test_path =  '/content/drive/MyDrive/Colab Notebooks/ANN/chest_xray/test'

vgg = VGG16(input_shape=image_size + [3],weights = 'imagenet',include_top = False)

for layer in vgg.layers:
  layer.trainable = False

folders = glob('/content/drive/MyDrive/Colab Notebooks/ANN/chest_xray/train')

len(folders)

x = Flatten()(vgg.output)

n_classes = 2
prediction = Dense(n_classes,activation = 'softmax')(x)

model = Model(inputs = vgg.input,outputs = prediction)

model.summary()

model.compile(loss = 'categorical_crossentropy',optimizer = 'adam',metrics = ['accuracy'])

batch_size = 32

train_datagen = ImageDataGenerator(rescale = 1.0/255,shear_range=0.2,
                                   zoom_range=0.2,horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale = 1.0/255)

training_set = train_datagen.flow_from_directory('/content/drive/MyDrive/Colab Notebooks/ANN/chest_xray/train',
                                                 target_size = (224,224),batch_size = batch_size,
                                                 class_mode = 'categorical')

test_set = test_datagen.flow_from_directory('/content/drive/MyDrive/Colab Notebooks/ANN/chest_xray/test',
                                            target_size = (224,224),batch_size = batch_size,
                                            class_mode = 'categorical')



r = model.fit(training_set,validation_data = test_set,epochs = 1,steps_per_epoch=len(training_set),validation_steps =len(test_set))

